/*
*
*/
package com.qa.util;
import java.io.File;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Map;
import org.testng.IReporter;
import org.testng.IResultMap;
import org.testng.ISuite;
import org.testng.ISuiteResult;
import org.testng.ITestContext;
import org.testng.ITestResult;
import org.testng.xml.XmlSuite;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;
public class ExtentReporterNG implements IReporter {

 private ExtentReports extent;
 public void generateReport(List<XmlSuite> xmlSuites, List<ISuite> suites,String
outputDirectory)
 {
 extent = new ExtentReports(outputDirectory + File.separator+ "Extent.html", true);
 for (ISuite suite : suites)
 {
 Map<String, ISuiteResult> result = suite.getResults();

 for (ISuiteResult r : result.values())
 {
 ITestContext context = r.getTestContext();

 buildTestNodes(context.getPassedTests(), LogStatus.PASS);
 buildTestNodes(context.getFailedTests(), LogStatus.FAIL);
 buildTestNodes(context.getSkippedTests(), LogStatus.SKIP);
 }
 }
 extent.flush();
 extent.close();
 }
 private void buildTestNodes(IResultMap tests, LogStatus status) {
 ExtentTest test;

 if (tests.size() > 0)
 {
 for (ITestResult result : tests.getAllResults())
 {
 test =
extent.startTest(result.getMethod().getMethodName());

 test.setStartedTime(getTime(result.getStartMillis()));
 test.setEndedTime(getTime(result.getEndMillis()));

 for (String group : result.getMethod().getGroups())
 test.assignCategory(group);

 if (result.getThrowable() != null)
 {
 test.log(status, result.getThrowable());
 }
 else
 {
 test.log(status, "Test " +
status.toString().toLowerCase()+ "ed");
 }

 extent.endTest(test);
 }
 }
 }
 private Date getTime(long millis)
 {
 Calendar calendar = Calendar.getInstance();
 calendar.setTimeInMillis(millis);
 return calendar.getTime();
 }
}
==============================================================
Log4j.properties
// Here we have defined root logger
log4j.rootLogger=INFO,CONSOLE,R,HTML,TTCC
// Here we define the appender
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.TTCC=org.apache.log4j.RollingFileAppender
log4j.appender.HTML=org.apache.log4j.FileAppender
// Here we define log file location
log4j.appender.R.File=./log/testlog.log
log4j.appender.TTCC.File=./log/testlog1.log
log4j.appender.HTML.File=./log/application.html
// Here we define the layout and pattern
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern= %5p [%t] (%F:%L)- %m%n
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%d - %c -%p - %m%n
log4j.appender.TTCC.layout=org.apache.log4j.TTCCLayout
log4j.appender.TTCC.layout.DateFormat=ISO8601
log4j.appender.HTML.layout=org.apache.log4j.HTMLLayout
log4j.appender.HTML.layout.Title=Application log
log4j.appender.HTML.layout.LocationInfo=true